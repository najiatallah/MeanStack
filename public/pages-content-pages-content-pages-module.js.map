{"version":3,"sources":["webpack:///./src/app/pages/content-pages/content-pages-routing.module.ts","webpack:///./src/app/pages/content-pages/content-pages.module.ts","webpack:///./src/app/pages/content-pages/error/error-page.component.html","webpack:///./src/app/pages/content-pages/error/error-page.component.scss","webpack:///./src/app/pages/content-pages/error/error-page.component.ts","webpack:///./src/app/pages/content-pages/forgot-password/forgot-password-page.component.html","webpack:///./src/app/pages/content-pages/forgot-password/forgot-password-page.component.scss","webpack:///./src/app/pages/content-pages/forgot-password/forgot-password-page.component.ts","webpack:///./src/app/pages/content-pages/login/login-page.component.html","webpack:///./src/app/pages/content-pages/login/login-page.component.scss","webpack:///./src/app/pages/content-pages/login/login-page.component.ts"],"names":[],"mappings":"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","file":"pages-content-pages-content-pages-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { LoginPageComponent } from \"./login/login-page.component\";\r\nimport { ErrorPageComponent } from \"./error/error-page.component\";\r\nimport { ForgotPasswordPageComponent } from \"./forgot-password/forgot-password-page.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        children: [\r\n            { path: 'login', component: LoginPageComponent, data: { title: 'Login Page' } },\r\n            { path: 'error', component: ErrorPageComponent, data: { title: 'Error Page' } },\r\n            { path: 'forgotpassword', component:ForgotPasswordPageComponent, data: { title: 'Forgot Password Page' }}\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class ContentPagesRoutingModule {\r\n\r\n    constructor() {\r\n        console.log('lazy ContentPagesRoutingModule loaded');\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ContentPagesRoutingModule } from './content-pages-routing.module';\n\nimport { LoginPageComponent } from './login/login-page.component';\nimport { ErrorPageComponent } from './error/error-page.component';\nimport { ForgotPasswordPageComponent } from './forgot-password/forgot-password-page.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContentPagesRoutingModule,\n    FormsModule\n  ],\n  declarations: [\n    LoginPageComponent,\n    ErrorPageComponent,\n    ForgotPasswordPageComponent\n  ]\n})\n\nexport class ContentPagesModule {\n\n  constructor() {\n    console.log('lazy ContentPagesModule loaded');\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row full-height-vh\\\">\\n    <div class=\\\"col-12 d-flex align-items-center justify-content-center\\\">\\n      <div class=\\\"card bg-blue-grey bg-darken-3 px-4\\\">\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"card-image text-center\\\">\\n            <i class=\\\"icon-shield font-large-5 blue-grey lighten-4\\\"></i>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"card-block\\\">\\n            <div class=\\\"text-center\\\">\\n              <h4 class=\\\"text-uppercase text-bold-400 white\\\">Error</h4>\\n            </div>\\n            <div class=\\\"text-center\\\">\\n              <div class=\\\"error-container\\\">\\n                <div class=\\\"no-border\\\">\\n                  <div class=\\\"text-center text-bold-700 grey darken-2 mt-5\\\" style=\\\"font-size: 11rem; margin-bottom: 4rem;\\\">404</div>\\n                </div>\\n                <div class=\\\"error-body\\\">\\n                  <div class=\\\"row py-2 justify-content-center\\\">\\n                    <div class=\\\"col-8\\\">\\n                      <a class=\\\"btn btn-brown btn-raised btn-block font-medium-2\\\">\\n                        <i class=\\\"ft-home\\\"></i> Back to Home</a>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"card-footer bg-blue-grey bg-darken-3\\\">\\n              <div class=\\\"float-left white\\\">\\n                <a (click)=\\\"onLogin()\\\">Login</a>\\n              </div>\\n              <div class=\\\"float-right white\\\">New User?\\n                <a (click)=\\\"onRegister()\\\">Register Now</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section id=\\\"forgot-password\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row full-height-vh\\\">\\r\\n            <div class=\\\"col-12 d-flex align-items-center justify-content-center\\\">\\r\\n                <div class=\\\"card bg-blue-grey bg-darken-3 px-4\\\">\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <div class=\\\"card-image text-center\\\">\\r\\n                            <i class=\\\"icon-key font-large-5 blue-grey lighten-4\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"card-block\\\">\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <h4 class=\\\"text-uppercase text-bold-400 white\\\">Forgot Password</h4>\\r\\n                            </div>\\r\\n                            <form class=\\\"pt-4\\\" (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <!-- <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"inputEmail\\\" id=\\\"inputEmail\\\" placeholder=\\\"Your Email Address\\\" ngModel> -->\\r\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"inputEmail\\\" id=\\\"inputEmail\\\" placeholder=\\\"Your Email\\\" \\r\\n                                    #inputEmail=\\\"ngModel\\\" ngModel required email >\\r\\n                                  <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!inputEmail.valid && (inputEmail.dirty || inputEmail.touched)\\\">Please enter a valid email</small>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group pt-2\\\">\\r\\n                                    <div class=\\\"text-center mt-3\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised btn-block\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-raised btn-block\\\">Cancel</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-footer bg-blue-grey bg-darken-3\\\">\\r\\n                            <div class=\\\"float-left white\\\"><a (click)=\\\"onLogin()\\\">Login</a></div>\\r\\n                            <div class=\\\"float-right white\\\">New User? <a (click)=\\\"onRegister()\\\">Register Now</a></div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</section>\\r\\n\"","module.exports = \"\"","import { Component, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-forgot-password-page',\r\n    templateUrl: './forgot-password-page.component.html',\r\n    styleUrls: ['./forgot-password-page.component.scss']\r\n})\r\n\r\nexport class ForgotPasswordPageComponent {\r\n    @ViewChild('f') forogtPasswordForm: NgForm;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute) { }\r\n\r\n    // On submit click, reset form fields\r\n    onSubmit() {\r\n        this.forogtPasswordForm.reset();\r\n    }\r\n\r\n    // On login link click\r\n    onLogin() {\r\n        this.router.navigate(['login'], { relativeTo: this.route.parent });\r\n    }\r\n\r\n    // On registration link click\r\n    onRegister() {\r\n        this.router.navigate(['register'], { relativeTo: this.route.parent });\r\n    }\r\n}","module.exports = \"<section id=\\\"login\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row full-height-vh\\\">\\n      <div class=\\\"col-12 d-flex align-items-center justify-content-center\\\">\\n        <div class=\\\"card gradient-blue-grey-blue-grey text-center width-400\\\">\\n          <div class=\\\"card-img overlap\\\">\\n            <img alt=\\\"element 06\\\" class=\\\"mb-1\\\" src=\\\"assets/img/portrait/avatars/avatar-00008.png\\\" width=\\\"190\\\">\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"card-block\\\">\\n              <h2 class=\\\"white\\\">Login</h2>\\n              <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"inputEmail\\\" id=\\\"inputEmail\\\" placeholder=\\\"Email\\\" #inputEmail=\\\"ngModel\\\" ngModel\\n                      required email [ngModelOptions]=\\\"{updateOn: 'change'}\\\">\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!inputEmail.valid && (inputEmail.dirty || inputEmail.touched)\\\">Please enter a valid email</small>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"inputPassword\\\" id=\\\"inputPassword\\\" placeholder=\\\"Password\\\" #inputPassword=\\\"ngModel\\\"\\n                      ngModel required [ngModelOptions]=\\\"{updateOn: 'change'}\\\">\\n                    <small class=\\\"form-text text-muted danger\\\" *ngIf=\\\"!inputPassword.valid && (inputPassword.dirty || inputPassword.touched)\\\">Password is required</small>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-pink btn-block btn-raised\\\" [disabled]=\\\"!f.valid\\\">Submit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block btn-raised\\\">Cancel</button>\\n                  </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <div class=\\\"float-left\\\">\\n              <a (click)=\\\"onForgotPassword()\\\" class=\\\"white\\\">Recover Password</a>\\n            </div>\\n            <div class=\\\"float-right\\\">\\n              <a (click)=\\\"onRegister()\\\" class=\\\"white\\\">New User?</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, ViewChild, Input } from '@angular/core';\nimport { FormControl, FormGroup, Validators, NgForm } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from 'app/shared/auth/auth.service';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\n\nexport class LoginPageComponent {\n\n  @ViewChild('f') loginForm: NgForm;\n\n\n  constructor(private router: Router, private route: ActivatedRoute, private authService: AuthService) {\n    console.log('Login page loaded');\n  }\n\n  onSubmit() {\n\n    const iEmail =  this.loginForm.value.inputEmail;     \n    const iPassword = this.loginForm.value.inputPassword;\n\n    this.authService.signinUser(iEmail, iPassword)\n      .subscribe(\n        data => {\n          if (data.status == 200){\n            const tk = data.token;\n            const user = data.user; \n            console.log(`@@sucess : - token ${tk} and user ${JSON.stringify(user)}`);\n          }\n          else{\n            console.log(`@ failure : - data ${data.message}`);\n          }\n        },\n        error => {\n          console.log(`error is : ${error}`);\n        });\n  }\n\n}\n"],"sourceRoot":""}